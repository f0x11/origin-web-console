apiVersion: v1
kind: Template
labels:
  template: hawk-console
message: |-
  Hawk has been depolyed.

  For more information about using this template, see https://github.com/Dataman-Cloud/hawk.
metadata:
  annotations:
    description: 数人云统一配置管理中心 Hawk，为分布式系统中的基础设施和微服务应用提供集中化的外部配置中心，实现了对服务端和客户端中环境变量，配置文件，动态属性配置的抽象映射，并支持配置的灰度下发，历史版本控制等先进功能。配置接口完全兼容 Spring Cloud Config，后台管理功能则通过 open API的形式对外开放，满足企业多样化的定制需求。数人云配置中心能够管理 Springcloud的微服务框架的业务配置，服务治理配置以及kubernetes的configmap和secrets的配置，同时也能通过插件的方式对流行的第三方类库提供特别支持，比如与 sharding-jdbc 的深度集成。
    iconClass: icon-hawk
    openshift.io/display-name: Hawk 产品(技术预览)
    tags: quickstart,hawk,dataman
    template.openshift.io/documentation-url: https://github.com/Dataman-Cloud/hawk
    template.openshift.io/long-description: This template is a hawk application.  The
      database is stored in non-persistent storage, so this configuration should be
      used for experimental purposes only.
    template.openshift.io/provider-display-name: Dataman, Inc.
    template.openshift.io/support-url: https://github.com/Dataman-Cloud/hawk
  name: hawk-console
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the hawk-gateway
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-gateway
  spec:
    ports:
    - name: hawk-gateway
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: ${APP_NAME}-gateway
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the hawk-gateway
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-gateway
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}-gateway
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}-gateway
      spec:
        containers:
        - env:
          - name: SERVER_PORT
            value: "8080"
          - name: HAWK_ETCD_ENDPOINTS
            value: ${HAWK_ETCD_ENDPOINTS}
          image: ' '
          name: hawk-gateway
          ports:
          - containerPort: 8080
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: 500m
              memory: 500Mi
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - hawk-gateway
        from:
          kind: ImageStreamTag
          name: hawk-gateway:1.2.1
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the hawk-portal-gateway
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-portal-gateway
  spec:
    ports:
    - name: hawk-portal-gateway
      port: 8081
      targetPort: 8081
    selector:
      deploymentconfig: ${APP_NAME}-portal-gateway
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the hawk-portal-gateway
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-portal-gateway
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}-portal-gateway
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}-portal-gateway
      spec:
        containers:
        - image: ' '
          name: hawk-portal-gateway
          ports:
          - containerPort: 8081
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: 500m
              memory: 500Mi
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - hawk-portal-gateway
        from:
          kind: ImageStreamTag
          name: hawk-portal-gateway:1.2.1
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the hawk-ui
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-ui
  spec:
    ports:
    - name: hawk-ui
      port: 8083
      targetPort: 8083
    selector:
      deploymentconfig: ${APP_NAME}-ui
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the hawk-ui
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-ui
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}-ui
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}-ui
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://${APP_NAME}-portal
          - name: API_PORT
            value: "8084"
          image: ' '
          name: hawk-ui
          ports:
          - containerPort: 8084
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: 500m
              memory: 500Mi
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - hawk-ui
        from:
          kind: ImageStreamTag
          name: hawk-ui:1.2.1
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the hawk-server
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-server
  spec:
    ports:
    - name: hawk-server
      port: 8082
      targetPort: 8082
    selector:
      deploymentconfig: ${APP_NAME}-server
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the hawk-server
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-server
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}-server
    strategy:
      type: Rolling
    template:
      metadata:
        annotations:
          prometheus.io/path: /prometheus
          prometheus.io/port: '8082'
          prometheus.io/scrape: 'true'
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}-server
          type: hawk-server
      spec:
        containers:
        - env:
          - name: SERVER_PORT
            value: "8082"
          - name: HAWK_ETCD_ENDPOINTS
            value: ${HAWK_ETCD_ENDPOINTS}
          image: ' '
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /application/health
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: hawk-server
          ports:
          - containerPort: 8082
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: 500m
              memory: 500Mi
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - hawk-server
        from:
          kind: ImageStreamTag
          name: hawk-server:1.2.1
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the hawk-portal
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-portal
  spec:
    ports:
    - name: hawk-portal
      port: 8084
      targetPort: 8084
    selector:
      deploymentconfig: ${APP_NAME}-portal
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the hawk-portal
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-portal
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}-portal
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}-portal
      spec:
        containers:
        - env:
          - name: SERVER_PORT
            value: "8084"
          - name: HAWK_ETCD_ENDPOINTS
            value: ${HAWK_ETCD_ENDPOINTS}
          - name: SPRING_DATASOURCE_URL
            value: ${SPRING_DATASOURCE_URL}
          - name: SPRING_DATASOURCE_USERNAME
            value: root
          - name: SPRING_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: ${SECRET_NAME}
          image: ' '
          name: hawk-portal
          ports:
          - containerPort: 8084
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: 500m
              memory: 500Mi
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - hawk-portal
        from:
          kind: ImageStreamTag
          name: hawk-portal:1.2.1
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-ui
  spec:
    port:
      targetPort: hawk-ui
    to:
      kind: Service
      name: ${APP_NAME}-ui
      weight: 100
parameters:
- displayName: Application Name
  name: APP_NAME
  required: true
  value: hawk
- description: Store DB user and password. The key is 'database-root-password'.
  displayName: Secret Name
  name: SECRET_NAME
  required: true
  value: hawk
- displayName: Etcd Name
  name: HAWK_ETCD_ENDPOINTS
  required: true
  value: http://bootstrap-etcd:2379
- displayName: DB Data Source Url
  name: SPRING_DATASOURCE_URL
  required: true
  value: jdbc:mysql://portal-db:3306/HawkPortalDB?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true

