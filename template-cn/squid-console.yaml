apiVersion: v1
kind: Template
labels:
  template: squid-console
message: |-
  Squid has been depolyed.

  For more information about using this template, see https://github.com/Dataman-Cloud/squid.
metadata:
  annotations:
    description: 数人云的Squid是一体化异步微服务平台，基于容器云平台打造，支持同步和异步模式。它具有高可用、高并发、无侵入性扩展业务、服务依赖实时跟踪以及自动伸缩等特性，无缝融合物理机、虚拟机及容器，从而实现微服务统一管理、配置、监控。
    iconClass: icon-squid
    openshift.io/display-name: Squid 产品(技术预览)
    tags: quickstart,squid,dataman
    template.openshift.io/documentation-url: https://github.com/Dataman-Cloud/squid
    template.openshift.io/long-description: This template is a squid application.  The
      database is stored in non-persistent storage, so this configuration should be
      used for experimental purposes only.
    template.openshift.io/provider-display-name: Dataman, Inc.
    template.openshift.io/support-url: https://github.com/Dataman-Cloud/squid
  name: squid-console
objects:
- apiVersion: v1
  kind: RoleBinding
  metadata:
    name: eams
  roleRef:
    name: admin
  subjects:
  - name: eams
    kind: ServiceAccount
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: eams
- apiVersion: v1
  data:
    regcenter.json: |
      [
        {
          "nameAndNamespace": "demo/squid.dataman.com",
          "zkAddressList": "${ZOOKEEPER_ADDRESS_LIST}",
          "degree":"1"
        }
      ]
  kind: ConfigMap
  metadata:
    name: ${APP_NAME}-config
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the squid-console server
    name: ${APP_NAME}-console
  spec:
    ports:
    - name: squid-console
      port: 9088
      targetPort: 9088
    selector:
      name: ${APP_NAME}-console
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the squid-console
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${APP_NAME}-console
  spec:
    replicas: 1
    selector:
      name: ${APP_NAME}-console
    strategy:
      type: Rolling
    template:
      metadata:
        annotations:
          prometheus.io/path: /prometheus
          prometheus.io/port: '9088'
          prometheus.io/scrape: 'true'
        labels:
          name: ${APP_NAME}-console
          type: "squid-console"
        name: ${APP_NAME}-console
      spec:
        serviceAccount: eams
        containers:
        - image: ' '
          name: squid-console
          ports:
          - containerPort: 9088
          env:
          - name: SQUID_LOG_LEVEL
            value: "INFO"
          - name: SQUID_CONSOLE_DB_URL
            value: "${SQUID_DB_SERVICE_ADDRESS}"
          - name: SQUID_CONSOLE_DB_USERNAME
            value: root
          - name: SQUID_CONSOLE_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: ${APP_NAME}
          - name: SQUID_DCOS_REGISTRY_URI
            value: "${SQUID_REGISTRY_URI}"
          - name: K8S_NAMESPACE
            value: "${NAMESPACE}"
          - name: SQUID_CONSOLE_PORT
            value: '9088'
          - name: K8S_REGISTRY
            value: 'true'
          - name: SQUID_METRICS_PORT
            value: '9091'
          volumeMounts:
            - name: config-volume
              mountPath: /squid-console/regcenter.json
              subPath: regcenter.json
          securityContext:
            runAsUser: 0
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 9088
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: '2'
              memory: 2000Mi
            requests:
              cpu: 500m
              memory: 500Mi
        volumes:
          - name: config-volume
            configMap:
              name: ${APP_NAME}-config
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - squid-console
        from:
          kind: ImageStreamTag
          name: centos7-openjdk8-squid-console:1.4.6
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the squid-console-ue server
    name: ${APP_NAME}-ue
  spec:
    ports:
    - name: squid-ue
      port: 18080
      targetPort: 18080
    selector:
      name: ${APP_NAME}-ue
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the squid-console-ue
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${APP_NAME}-ue
  spec:
    replicas: 1
    selector:
      name: ${APP_NAME}-ue
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: ${APP_NAME}-ue
        name: ${APP_NAME}-ue
      spec:
        containers:
        - image: ' '
          name: squid-ue
          ports:
          - containerPort: 18080
          env:
          - name: API_URL
            value: "http://${APP_NAME}-console"
          - name: API_PORT
            value: "9088"
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: '1'
              memory: 500Mi
            requests:
              cpu: 500m
              memory: 256Mi
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - squid-ue
        from:
          kind: ImageStreamTag
          name: centos7-nginx1.12-squid-console-ue:1.4.6
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the squid-client server
    name: ${APP_NAME}-demo-client
  spec:
    ports:
    - name: squid-client
      port: 8081
      targetPort: 8081
    selector:
      name: ${APP_NAME}-demo-client
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the squid-client
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${APP_NAME}-demo-client
  spec:
    replicas: 1
    selector:
      name: ${APP_NAME}-demo-client
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: ${APP_NAME}-demo-client
        name: ${APP_NAME}-demo-client
      spec:
        containers:
        - image: ' '
          name: squid-client
          ports:
          - containerPort: 8081
          env:
          - name: LOG_LEVEL
            value: ERROR
          - name: SQUID_ZK_ADDRESS
            value: '${ZOOKEEPER_ADDRESS_LIST}'
          - name: SQUID_SERVICE_NAMESPACE
            value: "squid.dataman.com"
          - name: SQUID_DEMO_CLIENT_SERVICE_NAME
            value: "demoServiceOneClient"
          - name: SQUID_DEMO_CLIENT_DEPENDENCY_SERVICE_NAME
            value: "demoServiceOne"
          - name: SQUID_DEMO_CLIENT_DEPENDENCY_SERVICE_NAMESPACE
            value: "squid.dataman.com"
          - name: SQUID_DEMO_CLIENT_SLEEPTIME_MS
            value: "1000"
          - name: SQUID_DEMO_CLIENT_SERVER_SLEEPTIME_MS
            value: "0"
          - name: SQUID_DEMO_RUNNING_S
            value: "300"
          - name: SQUID_CLIENT_ASYNC_MODE
            value: "false"
          - name: SQUID_DEMO_RUNNING_THREADS
            value: "1"
          - name: SQUID_LOG_DIR
            value: "/home/apps"
          - name: CLIENT_DUPLICATE
            value: "true"
          - name: LOOP_COUNT
            value: "10000"
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: 500m
              memory: 500Mi
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - squid-client
        from:
          kind: ImageStreamTag
          name: centos7-openjdk8-squid-demo-client:1.4.6
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the squid-server server
    name: ${APP_NAME}-demo-server
  spec:
    ports:
    - name: squid-server
      port: 39011
      targetPort: 39011
    selector:
      name: ${APP_NAME}-demo-server
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the squid-server
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${APP_NAME}-demo-server
  spec:
    replicas: 1
    selector:
      name: ${APP_NAME}-demo-server
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: ${APP_NAME}-demo-server
        name: ${APP_NAME}-demo-server
      spec:
        containers:
        - image: ' '
          name: squid-server
          ports:
          - containerPort: 39011
          env:
          - name: SQUID_LOG_LEVEL
            value: INFO
          - name: SQUID_ZK_CONNECTION
            value: "${ZOOKEEPER_ADDRESS_LIST}"
          - name: SQUID_DISABLE_METRICS
            value: "false"
          - name: SQUID_SERVICE_NAME
            value: "demoServiceOne"
          command: ["/bin/sh", "/squid-executor/bin/squid-executor.sh", "start", "-n", "squid.dataman.com", "-r" ,"foreground", "-env", "docker", "-d", "/squid-executor/apps/app"]
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: 500m
              memory: 500Mi
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - squid-server
        from:
          kind: ImageStreamTag
          name: centos7-openjdk8-squid-demo-server:1.4.6
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Route
  metadata:
    name: ${APP_NAME}-ue
  spec:
    port:
      targetPort: squid-ue
    to:
      kind: Service
      name: ${APP_NAME}-ue
      weight: 100
parameters:
- description: Current Project Name.
  displayName: Current Project Name
  name: NAMESPACE
  required: true
  value: ''
- description: Application Name.
  displayName: Application Name
  name: APP_NAME
  required: true
  value: 'squid'
- displayName: Zookeeper Address LIST
  name: ZOOKEEPER_ADDRESS_LIST
  required: true
  value: kafka-zk:2181
- displayName: Squid DB Address
  name: SQUID_DB_SERVICE_ADDRESS
  required: true
  value: "jdbc:mysql://squid-db:3306/squid_console"
- displayName: AUTH SECRET
  name: AUTH_SECRET
  required: true
  value: "789112"
